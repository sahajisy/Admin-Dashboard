<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= @exam.title %></title>
  <%= stylesheet_link_tag 'application', media: 'all' %>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <style>
    body {
      background-image: linear-gradient(rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.5)), url('<%= asset_path("login_bg.png") %>');
      background-size: cover;
      background-position: center;
      background-attachment: fixed; /* Keep background fixed while scrolling */
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      min-height: 100vh; /* Changed from height to min-height */
      overflow-y: auto; /* Allow vertical scrolling */
    }

    .sticky-header {
      position: sticky;
      top: 0;
      z-index: 1000;
      background-color: #fff;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 10px 20px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      border-bottom: 1px solid #ddd;
      width: 100%;
    }

    .description-left {
      flex: 1;
      text-align: left;
    }

    .title-center {
      flex: 2;
      text-align: center;
      font-size: 1.5em;
      font-weight: bold;
      color: #333;
    }

    .timer-right {
      flex: 1;
      text-align: right;
      font-weight: bold;
      color: #d9534f;
    }

    .exam-container {
      max-width: 800px;
      margin: 0 auto;
      background: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      flex: 1; /* Allow container to grow */
      overflow-y: auto; /* Allow vertical scrolling within container */
      margin-top: 20px;
      margin-bottom: 20px;
    }

    .question {
      margin-bottom: 20px;
      padding: 15px;
      border: 1px solid #ddd;
      border-radius: 5px;
      background-color: #fafafa;
    }

    label {
      display: block;
      margin: 5px 0;
      cursor: pointer;
    }

    .submit-button {
      display: block;
      width: 100%;
      padding: 10px;
      background-color: #5cb85c;
      color: white;
      border: none;
      border-radius: 5px;
      font-size: 16px;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    .submit-button:hover {
      background-color: #4cae4c;
    }

    /* Custom audio player styles */
    .custom-audio-player {
      background: #f0f0f0;
      padding: 12px;
      border-radius: 8px;
      margin: 15px 0;
    }

    .mini-player {
      display: flex;
      align-items: center;
      flex-wrap: wrap;
    }

    .play-button {
      background: #4a90e2;
      color: white;
      border: none;
      border-radius: 4px;
      padding: 8px 16px;
      cursor: pointer;
      margin-right: 15px;
      transition: all 0.2s;
      font-weight: 600;
    }

    .play-button:hover {
      background: #3a80d2;
    }

    .play-button:disabled {
      background: #ccc;
      cursor: not-allowed;
    }

    .progress-container {
      height: 8px;
      background: #ddd;
      border-radius: 4px;
      flex-grow: 1;
      margin-right: 10px;
      overflow: hidden;
    }

    .progress-bar {
      height: 100%;
      width: 0;
      background: #4cae4c;
      transition: width 0.1s;
    }

    .time-display {
      min-width: 50px;
      text-align: right;
      font-size: 14px;
      color: #666;
    }
  </style>
</head>
<body>
  <!-- Sticky Header -->
  <div class="sticky-header">
    <div class="description-left">
      <p><strong>Description:</strong> <%= @exam.description %></p>
    </div>
    <div class="title-center">
      <%= @exam.title %>
    </div>
    <div class="timer-right">
      <p>Time Remaining: <span id="timer"></span></p>
    </div>
  </div>

  <!-- Scrollable Questions and Form -->
  <div class="exam-container">
    <%= form_with url: submit_exam_path(@exam, applicant_id: @applicant.id), method: :post do %>
      <% @questions.each do |question| %>
        <div class="question">
          <h3><%= question.content %></h3>
          
          <!-- Add this code to display the image -->
          <% if question.image.attached? %>
            <div class="question-image">
              <%= image_tag url_for(question.image), style: "max-width: 100%; max-height: 300px; margin: 10px 0;" %>
            </div>
          <% end %>
          
          <!-- Replace the existing audio player code with this -->
          <% if question.audio.attached? %>
            <div class="question-audio">
              <div class="custom-audio-player" id="audio-player-<%= question.id %>">
                <!-- Hidden native audio element -->
                <%= audio_tag url_for(question.audio), id: "audio-element-#{question.id}", style: "display: none;" %>
                
                <!-- Custom mini player UI -->
                <div class="mini-player">
                  <button type="button" class="play-button" data-question-id="<%= question.id %>">
                    <i class="fas fa-play"></i> Play Audio (one-time only)
                  </button>
                  <div class="progress-container">
                    <div class="progress-bar" id="progress-<%= question.id %>"></div>
                  </div>
                  <span class="time-display" id="time-<%= question.id %>">0:00</span>
                </div>
              </div>
            </div>
          <% end %>
          
          <% question.options.shuffle.each do |option| %>
            <label>
              <%= radio_button_tag "answers[#{question.id}]", option.id %>
              <%= option.content %>
            </label>
          <% end %>
        </div>
      <% end %>
      
      <%= hidden_field_tag :applicant_id, @applicant.id %>
      <%= submit_tag 'Submit Exam', class: 'submit-button' %>
    <% end %>
  </div>

  <!-- Inline JavaScript -->
  <%= javascript_tag do %>
    var endTime = new Date("<%= @end_time.strftime('%Y-%m-%dT%H:%M:%S') %>").getTime();
    var timerInterval = setInterval(function() {
      var now = new Date().getTime();
      var timeLeft = endTime - now;

      if (timeLeft <= 0) {
        clearInterval(timerInterval);
        document.forms[0].submit();
      } else {
        var minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
        var seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);
        document.getElementById("timer").textContent = minutes + "m " + seconds + "s";
      }
    }, 1000);
    
    // One-time audio playback implementation
    document.addEventListener('DOMContentLoaded', function() {
      const playButtons = document.querySelectorAll('.play-button');
      
      playButtons.forEach(button => {
        const questionId = button.getAttribute('data-question-id');
        const audioElement = document.getElementById(`audio-element-${questionId}`);
        const progressBar = document.getElementById(`progress-${questionId}`);
        const timeDisplay = document.getElementById(`time-${questionId}`);
        
        console.log("Audio element found:", audioElement ? "yes" : "no");
        if (audioElement) {
          console.log("Audio source:", audioElement.src);
          console.log("Audio ready state:", audioElement.readyState);
        }
        
        if (!audioElement) return; // Skip if audio element doesn't exist
        
        // Track if audio has been played
        let hasPlayed = false;
        
        button.addEventListener('click', function(event) {
          event.preventDefault();
          event.stopPropagation();
          
          if (hasPlayed) return;
          
          // Use the actual audio element directly instead of creating a new Audio object
          audioElement.play()
            .then(() => {
              button.disabled = true;
              button.innerHTML = '<i class="fas fa-volume-up"></i> Playing...';
              hasPlayed = true;
            })
            .catch(error => {
              console.error("Audio playback error:", error);
              button.innerHTML = '<i class="fas fa-exclamation-triangle"></i> Error';
              button.style.background = '#d9534f';
            });
        });
        
        // Update progress bar
        audioElement.addEventListener('timeupdate', function() {
          const percent = (audioElement.currentTime / audioElement.duration) * 100;
          progressBar.style.width = percent + '%';
          
          // Format time display
          const minutes = Math.floor(audioElement.currentTime / 60);
          const seconds = Math.floor(audioElement.currentTime % 60).toString().padStart(2, '0');
          timeDisplay.textContent = `${minutes}:${seconds}`;
        });
        
        // When audio ends
        audioElement.addEventListener('ended', function() {
          button.innerHTML = '<i class="fas fa-check"></i> Played';
          button.style.background = '#999';
          progressBar.style.width = '100%';
        });
        
        // Handle errors
        audioElement.addEventListener('error', function() {
          button.innerHTML = '<i class="fas fa-exclamation-triangle"></i> Error';
          button.style.background = '#d9534f';
        });
      });
    });
  <% end %>
</body>
</html>